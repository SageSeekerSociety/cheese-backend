//
//  DO NOT MODIFY THIS FILE!
//
//  TypeORM is deprecated in this project, and we use Prisma instead.
//  This file is only used to access legacy tables.
//
//  This file is generated by Prisma from the schema in a .legacy.entity.ts file,
//  If you modify this file, the schema in .legacy.prisma will be inconsistent
//  with this file. This may cause unexpected errors.
//  
//  2024-02-19 by Nictheboy <nictheboy@outlook.com>
//

import { user } from "../users/users.legacy"
import { question } from "../questions/questions.legacy"

model group {
  id                          Int                           @id(map: "PK_256aa0fda9b1de1a73ee0b7106b") @default(autoincrement())
  name                        String                        @unique(map: "IDX_8a45300fd825918f3b40195fbd") @db.VarChar
  createdAt                   DateTime                      @default(dbgenerated("('now'::text)::timestamp(3) with time zone"))
  updatedAt                   DateTime                      @default(now()) @db.Timestamp(6)
  deletedAt                   DateTime?                     @db.Timestamp(6)
  group_membership            group_membership[]
  group_profile               group_profile?
  group_question_relationship group_question_relationship[]
  group_target                group_target[]
}

model group_membership {
  id        Int       @id(map: "PK_b631623cf04fa74513b975e7059") @default(autoincrement())
  groupId   Int
  memberId  Int
  role      String    @db.VarChar
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  user      user      @relation(fields: [memberId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_membership_member_id")
  group     group     @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_membership_group_id")

  @@index([memberId], map: "IDX_7d88d00d8617a802b698c0cd60")
  @@index([groupId], map: "IDX_b1411f07fafcd5ad93c6ee1642")
}

model group_profile {
  id        Int       @id(map: "PK_2a62b59d1bf8a3191c992e8daf4") @default(autoincrement())
  intro     String    @db.VarChar
  avatar    String    @db.VarChar
  groupId   Int       @unique(map: "REL_7359ba99cc116d00cf74e048ed")
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @default(now()) @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  group     group     @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_profile_group_id")
}

model group_question_relationship {
  id         Int       @id(map: "PK_47ee7be0b0f0e51727012382922") @default(autoincrement())
  groupId    Int
  questionId Int       @unique(map: "REL_5b1232271bf29d99456fcf39e7")
  createdAt  DateTime  @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  deletedAt  DateTime? @db.Timestamp(6)
  question   question  @relation(fields: [questionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_question_relationship_question_id")
  group      group     @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_question_relationship_group_id")

  @@index([groupId], map: "IDX_b31bf3b3688ec41daaced89a0a")
}

model group_target {
  id                  Int       @id(map: "PK_f1671a42b347bd96ce6595f91ee") @default(autoincrement())
  groupId             Int
  name                String    @db.VarChar
  intro               String    @db.VarChar
  createdAt           DateTime  @default(now()) @db.Timestamp(6)
  updatedAt           DateTime  @default(now()) @db.Timestamp(6)
  deletedAt           DateTime? @db.Timestamp(6)
  startedAt           DateTime  @db.Date
  endedAt             DateTime  @db.Date
  attendanceFrequency String    @db.VarChar
  group               group     @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_group_target_group_id")

  @@index([groupId], map: "IDX_19d57f140124c5100e8e1ca308")
}
