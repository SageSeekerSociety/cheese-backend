//
//  DO NOT MODIFY THIS FILE!
//
//  TypeORM is deprecated in this project, and we use Prisma instead.
//  This file is only used to access legacy tables.
//
//  This file is generated by Prisma from the schema in a .legacy.entity.ts file,
//  If you modify this file, the schema in .legacy.prisma will be inconsistent
//  with this file. This may cause unexpected errors.
//  
//  2024-02-19 by Nictheboy <nictheboy@outlook.com>
//

import { group_question_relationship } from "../groups/groups.legacy"
import { user } from "../users/users.legacy"
import { topic } from "../topics/topics.legacy"

model question {
  id                          Int                          @id(map: "PK_21e5786aa0ea704ae185a79b2d5") @default(autoincrement())
  createdById                 Int
  title                       String
  content                     String
  type                        Int
  groupId                     Int?
  createdAt                   DateTime                     @default(now()) @db.Timestamp(6)
  updatedAt                   DateTime                     @default(now()) @db.Timestamp(6)
  deletedAt                   DateTime?                    @db.Timestamp(6)
  group_question_relationship group_question_relationship?
  user                        user                         @relation(fields: [createdById], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_created_by_id")
  question_follower_relation  question_follower_relation[]
  question_query_log          question_query_log[]
  question_topic_relation     question_topic_relation[]

  @@index([createdById], map: "IDX_187915d8eaa010cde8b053b35d")
  @@index([title, content], map: "IDX_8b24620899a8556c3f22f52145")
  @@index([groupId], map: "IDX_ac7c68d428ab7ffd2f4752eeaa")
}

model question_follower_relation {
  id         Int       @id(map: "PK_5f5ce2e314f975612a13d601362") @default(autoincrement())
  questionId Int
  followerId Int
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  deletedAt  DateTime? @db.Timestamp(6)
  user       user      @relation(fields: [followerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_follower_relation_follower_id")
  question   question  @relation(fields: [questionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_follower_relation_question_id")

  @@index([followerId], map: "IDX_21a30245c4a32d5ac67da80901")
  @@index([questionId], map: "IDX_6544f7f7579bf88e3c62f995f8")
}

model question_query_log {
  id         Int      @id(map: "PK_2876061262a774e4aba4daaaae4") @default(autoincrement())
  viewerId   Int?
  questionId Int
  ip         String   @db.VarChar
  userAgent  String   @db.VarChar
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [viewerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_query_log_viewer_id")
  question   question @relation(fields: [questionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_query_log_question_id")

  @@index([viewerId], map: "IDX_8ce4bcc67caf0406e6f20923d4")
  @@index([questionId], map: "IDX_a0ee1672e103ed0a0266f217a3")
}

model question_search_log {
  id              Int      @id(map: "PK_6f41b41474cf92c67a7da97384c") @default(autoincrement())
  keywords        String   @db.VarChar
  firstQuestionId Int?
  pageSize        Int
  result          String   @db.VarChar
  duration        Float
  searcherId      Int?
  ip              String   @db.VarChar
  userAgent       String   @db.VarChar
  createdAt       DateTime @default(now()) @db.Timestamp(6)
  user            user?    @relation(fields: [searcherId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_search_log_searcher_id")

  @@index([searcherId], map: "IDX_13c7e9fd7403cc5a87ab6524bc")
  @@index([keywords], map: "IDX_2fbe3aa9f62233381aefeafa00")
}

model question_topic_relation {
  id          Int       @id(map: "PK_c50ec8a9ac6c3007f0861e4a383") @default(autoincrement())
  questionId  Int
  topicId     Int
  createdById Int
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  deletedAt   DateTime? @db.Timestamp(6)
  user        user      @relation(fields: [createdById], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_topic_relation_created_by_id")
  topic       topic     @relation(fields: [topicId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_topic_relation_topic_id")
  question    question  @relation(fields: [questionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_question_topic_relation_question_id")

  @@index([topicId], map: "IDX_dd4b9a1b83559fa38a3a50463f")
  @@index([questionId], map: "IDX_fab99c5e4fc380d9b7f9abbbb0")
}
