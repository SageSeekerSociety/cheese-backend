//
//  DO NOT MODIFY THIS FILE!
//
//  TypeORM is deprecated in this project, and we use Prisma instead.
//  This file is only used to access legacy tables.
//
//  This file is generated by Prisma from the schema in a .legacy.entity.ts file,
//  If you modify this file, the schema in .legacy.prisma will be inconsistent
//  with this file. This may cause unexpected errors.
//  
//  2024-02-19 by Nictheboy <nictheboy@outlook.com>
//

import { group } from "../groups/groups.legacy"
import { user } from "../users/users.legacy"
import { question } from "../questions/questions.legacy"

model answer {
  id                       Int                        @id(map: "PK_9232db17b63fb1e94f97e5c224f") @default(autoincrement())
  createdById              Int
  questionId               Int
  groupId                  Int?
  content                  String
  createdAt                DateTime                   @default(now()) @db.Timestamp(6)
  updatedAt                DateTime                   @default(now()) @db.Timestamp(6)
  deletedAt                DateTime?                  @db.Timestamp(6)
  group                    group?                     @relation(fields: [groupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_1887685ce6667b435b01c646a2c")
  question                 question                   @relation(fields: [questionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_a4013f10cd6924793fbd5f0d637")
  user                     user                       @relation(fields: [createdById], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f636f6e852686173ea947f29045")
  answer_delete_log        answer_delete_log[]
  answer_favorited_by_user answer_favorited_by_user[]
  answer_query_log         answer_query_log[]
  answer_update_log        answer_update_log[]
  answer_user_attitude     answer_user_attitude[]
  accepted_by_question     question?                  @relation("AcceptedAnswer")

  @@index([groupId], map: "IDX_1887685ce6667b435b01c646a2")
  @@index([questionId], map: "IDX_a4013f10cd6924793fbd5f0d63")
  @@index([createdById], map: "IDX_f636f6e852686173ea947f2904")
}

model answer_delete_log {
  id        Int      @id(map: "PK_f1696d27f69ec9c6133a12aadcf") @default(autoincrement())
  deleterId Int?
  answerId  Int
  createdAt DateTime @default(now()) @db.Timestamp(6)
  answer    answer   @relation(fields: [answerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_910393b814aac627593588c17fd")
  user      user?    @relation(fields: [deleterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c2d0251df4669e17a57d6dbc06f")

  @@index([answerId], map: "IDX_910393b814aac627593588c17f")
  @@index([deleterId], map: "IDX_c2d0251df4669e17a57d6dbc06")
}

model answer_favorited_by_user {
  answerId Int
  userId   Int
  user     user   @relation(fields: [userId], references: [id], onDelete: Cascade, map: "FK_9556368d270d73579a68db7e1bf")
  answer   answer @relation(fields: [answerId], references: [id], onDelete: Cascade, map: "FK_c27a91d761c26ad612a0a356971")

  @@id([answerId, userId], map: "PK_5a857fe93c44fdb538ec5aa4771")
  @@index([userId], map: "IDX_9556368d270d73579a68db7e1b")
  @@index([answerId], map: "IDX_c27a91d761c26ad612a0a35697")
}

model answer_query_log {
  id        Int      @id(map: "PK_4f65c4804d0693f458a716aa72c") @default(autoincrement())
  viewerId  Int?
  answerId  Int
  ip        String   @db.VarChar
  userAgent String   @db.VarChar
  createdAt DateTime @default(now()) @db.Timestamp(6)
  answer    answer   @relation(fields: [answerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_71ed57d6bb340716f5e17043bbb")
  user      user?    @relation(fields: [viewerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f4b7cd859700f8928695b6c2bab")

  @@index([answerId], map: "IDX_71ed57d6bb340716f5e17043bb")
  @@index([viewerId], map: "IDX_f4b7cd859700f8928695b6c2ba")
}

model answer_update_log {
  id         Int      @id(map: "PK_5ae381609b7ae9f2319fe26031f") @default(autoincrement())
  updaterId  Int?
  answerId   Int
  oldContent String
  newContent String
  createdAt  DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [updaterId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0ef2a982b61980d95b5ae7f1a60")
  answer     answer   @relation(fields: [answerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6f0964cf74c12678a86e49b23fe")

  @@index([updaterId], map: "IDX_0ef2a982b61980d95b5ae7f1a6")
  @@index([answerId], map: "IDX_6f0964cf74c12678a86e49b23f")
}

model answer_user_attitude {
  id       Int    @id(map: "PK_c06b4ffc5a74d07cb867d6b3f98") @default(autoincrement())
  userId   Int
  answerId Int
  type     Int    @default(0)
  answer   answer @relation(fields: [answerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_2de5146dd65213f724e32745d06")
  user     user   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_7555fb52fdf623d67f9884ea63d")
}
