openapi: "3.0.2"
info:
  title: Cheese Community API
  version: "1.0"
servers:
  - url: http://localhost:7777/api/{version}
    description: Local server
    variables:
      version:
        default: v1
components:
  parameters:
    questionId:
      name: questionId
      in: path
      description: 问题 ID
      required: true
      schema:
        type: integer
        format: int64
    userId:
      name: userId
      in: path
      description: 用户 ID
      required: true
      schema:
        type: integer
        format: int64
    groupId:
      name: groupId
      in: path
      description: 圈子 ID
      required: true
      schema:
        type: integer
        format: int64
    invitationId:
      name: invitationId
      in: path
      description: 邀请 ID
      required: true
      schema:
        type: integer
        format: int64
    answerId:
      name: answerId
      in: path
      description: 回答 ID
      required: true
      schema:
        type: integer
        format: int64
    insightId:
      name: insightId
      in: path
      description: 灵感 ID
      required: true
      schema:
        type: integer
        format: int64
    targetId:
      name: targetId
      in: path
      description: 圈子目标 ID
      required: true
      schema:
        type: integer
        format: int64
    commentId:
      name: commentId
      in: path
      description: 评论 ID
      required: true
      schema:
        type: integer
        format: int64
    commentableId:
      name: commentableId
      in: path
      description: 评论对象 ID
      required: true
      schema:
        type: integer
        format: int64
    commentableType:
      name: commentableType
      in: path
      description: 评论对象类型
      required: true
      schema:
        type: string
        enum:
          - ANSWER
          - COMMENT
          - INSIGHT
          - QUESTION
    page_start:
      name: page_start
      in: query
      description: 该页第一个 item 的 ID，留空即为从头开始
      schema:
        type: integer
        format: int64
    page_size:
      name: page_size
      in: query
      description: 每页 item 数量
      schema:
        type: integer
        format: int64
        default: 20

  securitySchemes:
    bearerAuth:
      description: The access token is used in this way.
      type: http
      scheme: bearer
      bearerFormat: JWT
    bearerAuth2:
      type: apiKey
      description: The refresh token is used in this way.
      name: REFRESH_TOKEN
      in: cookie

  schemas:
    CommonResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          default: 0
          description: 错误码，0表示成功，其他表示失败
        message:
          type: string
          default: ""
          description: 错误信息，成功时为空字符串
      required:
        - code
        - message
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 用户 ID
          minimum: 1
        username:
          type: string
          description: 用户名
          example: "cheese"
        nickname:
          type: string
          description: 昵称
          example: "芝士"
        avatar:
          type: string
          description: 头像 URL
        intro:
          type: string
          description: 个人简介
          default: "This user has not set an introduction yet."
        follow_count:
          type: integer
          format: int64
          description: 关注用户的数量
          minimum: 0
          example: 114
        fans_count:
          type: integer
          format: int64
          description: 粉丝数量
          minimum: 0
          example: 514
        question_count:
          type: integer
          format: int64
          description: 提问数量
          minimum: 0
          example: 1919
        answer_count:
          type: integer
          format: int64
          description: 回答数量
          minimum: 0
          example: 810
        is_follow:
          type: boolean
          description: 当前登录用户是否关注该用户
      required:
        - id
        - username
        - nickname
        - avatar
        - intro
        - follow_count
        - fans_count
        - question_count
        - answer_count
    Page:
      type: object
      description: 分页信息
      properties:
        page_start:
          type: integer
          format: int64
          description: 该页第一个 item 的 ID
        page_size:
          type: integer
          format: int64
          description: 每页 item 数量
        has_prev:
          type: boolean
          description: 是否有上一页
        prev_start:
          type: integer
          format: int64
          description: 上一页第一个 item 的 ID
        has_more:
          type: boolean
          description: 是否有下一页
        next_start:
          type: integer
          format: int64
          description: 下一页第一个 item 的 ID
    Topic:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - name
    Question:
      type: object
      description: 问题详情
      properties:
        id:
          type: integer
          format: int64
          description: 问题 ID
        title:
          type: string
          description: 问题标题
        content:
          type: string
          description: 问题详情
        author:
          $ref: "#/components/schemas/User"
        type:
          type: integer
          description: 问题类型
        topics:
          type: array
          items:
            $ref: "#/components/schemas/Topic"
        created_at:
          type: integer
          format: int64
          description: 创建时间（时间戳）
        updated_at:
          type: integer
          format: int64
          description: 最后修改时间（时间戳）
        is_follow:
          type: boolean
          description: 是否关注问题
        is_like:
          type: boolean
          description: 是否点赞问题
        answer_count:
          type: integer
          description: 回答数量
        comment_count:
          type: integer
          description: 评论数量
        follow_count:
          type: integer
          description: 关注数量
        like_count:
          type: integer
          description: 点赞数量
        view_count:
          type: integer
          description: 浏览数量
        is_group:
          type: boolean
          description: 是否为小组问题
        group:
          $ref: "#/components/schemas/Group"
    Answer:
      type: object
      description: 回答详情
      properties:
        id:
          type: integer
          format: int64
          description: 回答 ID
        question_id:
          type: integer
          format: int64
          description: 回答所属的问题 ID
        content:
          type: string
          description: 回答内容
        author:
          $ref: "#/components/schemas/User"
        created_at:
          type: integer
          format: int64
          description: 创建时间（时间戳）
        updated_at:
          type: integer
          format: int64
          description: 最后修改时间（时间戳）
        agree_type:
          type: integer
          description: 赞同类型，0表示未赞同，1表示赞同，2表示反对
          enum:
            - 0
            - 1
            - 2
        is_favorite:
          type: boolean
          description: 是否收藏回答
        agree_count:
          type: integer
          description: 赞同数量
        comment_count:
          type: integer
          description: 评论数量
        favorite_count:
          type: integer
          description: 收藏数量
        view_count:
          type: integer
          description: 浏览数量
        is_group:
          type: boolean
          description: 是否为小组回答
        group:
          $ref: "#/components/schemas/Group"
    Comment:
      type: object
      description: 评论详情
      properties:
        id:
          type: integer
          format: int64
          description: 评论 ID
        commentable_id:
          type: integer
          format: int64
          description: 评论对象 ID
        commentable_type:
          type: string
          description: 评论对象，大写
          example: ANSWER
        content:
          type: string
          description: 评论内容
        user:
          $ref: "#/components/schemas/User"
        created_at:
          type: integer
          format: int64
          description: 创建时间（时间戳）
        attitude_type:
          type: string
          description: attitude类型，UNDEFINED表示未操作，AGREE表示赞同，DISAGREE表示反对
          enum:
            - AGREE
            - DISAGREE
            - UNDEFINED
        agree_count:
          type: integer
          description: 赞同数量
        disagree_count:
          type: integer
          description: 反对数量
        #sub_comments:
        #  type: array
        #  items:
        #    $ref: "#/components/schemas/Comment"
      required:
        - id
        - commentable_id
        - commentable_type
        - content
        - user
        - created_at
        - agree_type
        - agree_count
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 小组 ID
        name:
          type: string
          description: 小组名称
        intro:
          type: string
          description: 小组简介
        topics:
          type: array
          description: 小组话题
          items:
            $ref: "#/components/schemas/Topic"
        owner:
          $ref: "#/components/schemas/GroupMember"
        created_at:
          type: integer
          format: int64
          description: 创建时间
        updated_at:
          type: integer
          format: int64
          description: 最后更新时间
        member_count:
          type: integer
          format: int64
          description: 成员数量
        question_count:
          type: integer
          format: int64
          description: 问题数量
        answer_count:
          type: integer
          format: int64
          description: 回答数量
        is_member:
          type: boolean
          description: 当前用户是否为小组成员
        role:
          allOf:
            - $ref: "#/components/schemas/GroupRoleType"
            - description: 用户在小组中的角色
      required:
        - id
        - name
        - intro
        - owner
        - created_at
        - updated_at
        - member_count
        - question_count
        - answer_count
        - is_member
    GroupTarget:
      type: object
      description: 小组目标
      properties:
        id:
          type: integer
          description: 目标 ID
          format: int64
        name:
          type: string
          description: 目标名称
        intro:
          type: string
          description: 目标简介
          default: ""
        created_at:
          type: integer
          description: 创建时间
          format: int64
        start_time:
          type: integer
          description: 开始时间
          format: int64
        is_timed:
          type: boolean
          description: 是否为限时目标
          default: false
        end_time:
          type: integer
          description: 结束时间
          format: int64
        frequency:
          type: string
          description: 打卡频率
          enum:
            - once
            - daily
            - weekly
            - monthly
        is_material_required:
          type: boolean
          description: 是否需要提交材料
          default: false
        materials:
          type: array
          description: 打卡材料
          items:
            $ref: "#/components/schemas/GroupTargetMaterial"
      required:
        - id
        - name
        - intro
        - created_at
        - start_date
        - is_timed
        - frequency
        - is_material_required
    GroupTargetMaterial:
      type: object
      description: 小组目标打卡材料
      properties:
        type:
          type: string
          description: 类型
          enum:
            - text
            - image
            - video
            - file
        allow_multiple:
          type: boolean
          description: 是否允许多个材料
          default: false
        allow_file_type:
          type: array
          description: 若材料类型为 file，允许上传的文件类型（MIME）
          items:
            type: string
        title:
          type: string
          description: 标题
        description:
          type: string
          description: 描述
        required:
          type: boolean
          description: 是否为必填项
          default: false
    GroupTargetMaterialSubmission:
      type: object
      description: 小组目标打卡材料提交
      properties:
        type:
          type: string
          description: 类型
          enum:
            - text
            - image
            - video
            - file
        content:
          type: string
          description: 内容
        material_ids:
          type: array
          description: 如果材料类型为不为 text，所上传的材料 ID
          items:
            type: string
    GroupTargetCheckIn:
      type: object
      description: 小组目标打卡
      properties:
        id:
          type: integer
          description: 打卡 ID
          format: int64
        member:
          $ref: "#/components/schemas/GroupMember"
        target:
          $ref: "#/components/schemas/GroupTarget"
        created_at:
          type: integer
          description: 打卡时间
          format: int64
        updated_at:
          type: integer
          description: 最后更新时间
          format: int64
        materials:
          type: array
          description: 打卡时提交的材料
          items:
            $ref: "#/components/schemas/GroupTargetMaterialSubmission"
        approved:
          type: boolean
          description: 是否已通过审核
          default: true
    GroupRoleType:
      type: string
      description: 小组角色
      enum:
        - owner
        - admin
        - member
    GroupMembership:
      type: object
      description: 小组成员关系
      properties:
        created_at:
          type: integer
          format: int64
          description: 申请加入时间
        from:
          type: string
          description: 来源
          enum:
            - application
            - invitation
        joined_at:
          type: integer
          format: int64
          description: 正式加入时间
        is_pending:
          type: boolean
          description: 是否为待审核状态
      required:
        - created_at
        - from
        - pending
    GroupMember:
      type: object
      description: 小组成员信息
      properties:
        user:
          $ref: "#/components/schemas/User"
        membership:
          $ref: "#/components/schemas/GroupMembership"
        role:
          $ref: "#/components/schemas/GroupRoleType"
        contributions:
          type: object
          description: 用户在小组的贡献
          properties:
            score:
              type: integer
              format: int64
              description: 贡献值
              minimum: 0
            question_count:
              type: integer
              format: int64
              description: 小组内提问数量
              minimum: 0
            answer_count:
              type: integer
              format: int64
              description: 小组内回答数量
              minimum: 0
            check_in_count:
              type: integer
              format: int64
              description: 小组内打卡次数
              minimum: 0
    GroupMemberInvitationStatus:
      type: string
      description: 小组成员邀请状态
      enum:
        - pending
        - accepted
        - rejected
    GroupMemberInvitation:
      type: object
      description: 小组成员邀请
      properties:
        id:
          type: integer
          format: int64
        group:
          $ref: "#/components/schemas/Group"
        inviter:
          $ref: "#/components/schemas/User"
        invitee:
          $ref: "#/components/schemas/User"
        created_at:
          type: integer
          format: int64
          description: 邀请时间
        status:
          $ref: "#/components/schemas/GroupMemberInvitationStatus"
    GroupSettings:
      type: object
      description: 小组设置
      properties:
        join_type:
          type: string
          description: 加入小组方式
          enum:
            - OPEN
            - APPLICATION
            - INVITATION_ONLY
        join_questions:
          type: array
          description: 若加入方式为 application，需要回答的问题
          items:
            type: object
            properties:
              title:
                type: string
              content:
                type: string
              answers:
                type: array
                description: 问题的所有正确答案（符合任意一个即可直接通过该问题）
                items:
                  type: string
              ignore_case:
                type: boolean
                description: 答案是否忽略大小写
                default: true
              is_open:
                type: boolean
                description: 是否为开放式问题（如果是，则无需answers字段，回答后需等待管理员审核）
                default: false
            required:
              - title
              - content
              - is_open
    Insight:
      type: object
      description: 灵感
      properties:
        id:
          type: integer
          description: ID
          format: int64
        content:
          type: string
          description: 内容
        author:
          $ref: "#/components/schemas/User"
        created_at:
          type: integer
          description: 创建时间
          format: int64
        updated_at:
          type: integer
          description: 最后更新时间
          format: int64
        is_like:
          type: boolean
          description: 当前用户是否点赞
        like_count:
          type: integer
          description: 点赞数量
        comment_count:
          type: integer
          description: 评论数量
        view_count:
          type: integer
          description: 浏览数量
        medias:
          type: array
          description: 媒体文件，如果没有则为空数组
          items:
            $ref: "#/components/schemas/Media"
        attachment:
          $ref: "#/components/schemas/Attachment"
      required:
        - id
        - content
        - author
        - created_at
        - updated_at
        - is_like
        - like_count
        - comment_count
        - view_count
        - medias
    Attachment:
      type: object
      description: 附件
      properties:
        type:
          type: string
          description: 类型
          enum:
            - file
            - link
        url:
          type: string
          description: URL
        title:
          type: string
          description: 标题
        description:
          type: string
          description: 描述
    Media:
      type: object
      properties:
        id:
          type: integer
          description: ID
          format: int64
        type:
          type: string
          description: 类型
          enum:
            - image
            - video
        url:
          type: string
          description: URL
        meta:
          oneOf:
            - $ref: "#/components/schemas/ImageMeta"
            - $ref: "#/components/schemas/VideoMeta"
    ImageMeta:
      type: object
      description: 图片元数据
      properties:
        width:
          type: integer
          description: 宽度
        height:
          type: integer
          description: 高度
        size:
          type: integer
          description: 大小
        thumbnail:
          type: string
          description: 缩略图 URL
    VideoMeta:
      type: object
      description: 视频元数据
      properties:
        width:
          type: integer
          description: 宽度
        height:
          type: integer
          description: 高度
        size:
          type: integer
          description: 大小
        duration:
          type: integer
          description: 时长
        thumbnail:
          type: string
          description: 缩略图 URL
    FileMeta:
      type: object
      description: 文件元数据
      properties:
        size:
          type: integer
          description: 大小
          format: int64
        name:
          type: string
          description: 文件名称
        type:
          type: string
          description: 文件类型
          enum:
            - image
            - video
            - audio
            - document
            - executable
            - other
        expires:
          type: integer
          description: 过期时间，如果为 0 表示永不过期
          format: int64
        user:
          $ref: "#/components/schemas/User"
    LinkMeta:
      type: object
      description: 链接元数据
      properties:
        title:
          type: string
          description: 页面标题
        abstract:
          type: string
          description: 页面摘要
        image:
          type: string
          description: 图片 URL
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    LoginResponse:
      allOf:
        - $ref: "#/components/schemas/CommonResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                accessToken:
                  type: string
                user:
                  $ref: "#/components/schemas/User"
              required:
                - accessToken
                - user
          required:
            - data
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
        nickname:
          type: string
        password:
          type: string
        email:
          type: string
        emailCode:
          type: string
      required:
        - username
        - nickname
        - password
        - email
        - emailCode
    RegisterResponse:
      allOf:
        - $ref: "#/components/schemas/CommonResponse"
        - type: object
          properties:
            data:
              type: object
              properties:
                accessToken:
                  type: string
                user:
                  $ref: "#/components/schemas/User"
              required:
                - accessToken
                - user
          required:
            - data

paths:
  /users:
    post:
      summary: 用户注册
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: User registered successfully
          headers:
            Set-Cookie:
              description: "refresh token"
              schema:
                type: string
                example: "RefreshToken=...; Secure; HttpOnly; SameSite=Strict; Path=/users/auth/; Expires=Sat, 01 Jan 2025 00:00:00 GMT"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
  /users/auth/login:
    post:
      summary: 用户登录
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: "refresh token"
              schema:
                type: string
                example: "RefreshToken=...; Secure; HttpOnly; SameSite=Strict; Path=/users/auth; Expires=Sat, 01 Jan 2025 00:00:00 GMT"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
  /users/auth/refresh-token:
    post:
      summary: 用户刷新 token
      operationId: refresh-access-token
      security:
        - REFRESH_TOKEN: []
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: "refresh token"
              schema:
                type: string
                example: "RefreshToken=...; Secure; HttpOnly; SameSite=Strict; Path=/users/auth; Expires=Sat, 01 Jan 2025 00:00:00 GMT"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          accessToken:
                            type: string
                        required:
                          - accessToken
                    required:
                      - data

  /users/auth/logout:
    post:
      summary: 用户退出登录
      operationId: logout
      security:
        - REFRESH_TOKEN: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"

  /users/verify/email:
    post:
      summary: 发送邮箱验证码
      operationId: verifyEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
  /users/recover/password/request:
    post:
      summary: 重置密码请求
      operationId: recoverPasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
  /users/recover/password/verify:
    post:
      summary: 验证 Token 并重置密码
      operationId: recoverPasswordVerify
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                new_password:
                  type: string
              required:
                - token
                - new_password
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
  /users/{userId}:
    get:
      summary: 获取用户信息
      operationId: getUserInfo
      parameters:
        - $ref: "#/components/parameters/userId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            $ref: "#/components/schemas/User"
                    required:
                      - data
    put:
      summary: 更新用户信息
      operationId: updateUserInfo
      parameters:
        - $ref: "#/components/parameters/userId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                avatar:
                  type: string
                intro:
                  type: string
              required:
                - nickname
                - avatar
                - intro
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
  /users/{userId}/questions:
    get:
      summary: 获取用户提问列表
      operationId: getUserQuestions
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          questions:
                            type: array
                            items:
                              $ref: "#/components/schemas/Question"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
  /users/{userId}/answers:
    get:
      summary: 获取用户回答列表
      operationId: getUserAnswers
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          answers:
                            type: array
                            items:
                              $ref: "#/components/schemas/Answer"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
  /users/{userId}/followers:
    get:
      summary: 获取用户粉丝列表
      operationId: getUserFollowers
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          users:
                            type: array
                            items:
                              $ref: "#/components/schemas/User"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    post:
      summary: 关注用户
      operationId: followUser
      parameters:
        - $ref: "#/components/parameters/userId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          follow_count:
                            type: integer
                            description: 新的关注者数量
                        required:
                          - follow_count
                    required:
                      - data
    delete:
      summary: 取消关注用户
      operationId: unfollowUser
      parameters:
        - $ref: "#/components/parameters/userId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          follow_count:
                            type: integer
                            description: 新的关注者数量
                        required:
                          - follow_count
                    required:
                      - data
  /users/{userId}/follow/questions:
    get:
      summary: 获取用户关注的问题列表
      operationId: getUserFollowQuestions
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          questions:
                            type: array
                            items:
                              $ref: "#/components/schemas/Question"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
  /users/{userId}/follow/users:
    get:
      summary: 获取用户关注的用户列表
      operationId: getUserFollowUsers
      parameters:
        - $ref: "#/components/parameters/userId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          users:
                            type: array
                            items:
                              $ref: "#/components/schemas/User"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
  /questions:
    get:
      summary: 获取问题列表
      operationId: getQuestions
      parameters:
        - name: q
          in: query
          description: 搜索关键词
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          questions:
                            type: array
                            items:
                              $ref: "#/components/schemas/Question"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    post:
      summary: 提问
      operationId: askQuestion
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                type:
                  type: integer
                  description: 问题类型
                topics:
                  type: array
                  items:
                    type: integer
                    format: int64
                group_id:
                  type: integer
                  format: int64
                  description: 所属小组 ID，留空表示不属于任何小组
              required:
                - title
                - content
                - type
                - topics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                    required:
                      - data
  /questions/{questionId}:
    get:
      summary: 获取问题详情
      operationId: getQuestionDetail
      parameters:
        - $ref: "#/components/parameters/questionId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          question:
                            $ref: "#/components/schemas/Question"
                    required:
                      - data
    put:
      summary: 更新问题
      operationId: updateQuestion
      parameters:
        - $ref: "#/components/parameters/questionId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                type:
                  type: integer
                  description: 问题类型
                topics:
                  type: array
                  items:
                    type: integer
                    format: int64
              required:
                - title
                - content
                - type
                - topics
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    delete:
      summary: 删除问题
      operationId: deleteQuestion
      parameters:
        - $ref: "#/components/parameters/questionId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
  /questions/{questionId}/followers:
    get:
      summary: 获取问题关注者列表
      operationId: getQuestionFollowers
      parameters:
        - $ref: "#/components/parameters/questionId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          users:
                            type: array
                            items:
                              $ref: "#/components/schemas/User"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    put:
      summary: 关注问题
      operationId: followQuestion
      parameters:
        - $ref: "#/components/parameters/questionId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          follow_count:
                            type: integer
                            description: 新的关注者数量
                        required:
                          - follow_count
                    required:
                      - data
    delete:
      summary: 取消关注问题
      operationId: unfollowQuestion
      parameters:
        - $ref: "#/components/parameters/questionId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          follow_count:
                            type: integer
                            description: 新的关注者数量
                        required:
                          - follow_count
                    required:
                      - data
  /questions/{questionId}/answers:
    get:
      summary: 获取问题回答列表
      operationId: getQuestionAnswers
      parameters:
        - $ref: "#/components/parameters/questionId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          answers:
                            type: array
                            items:
                              $ref: "#/components/schemas/Answer"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    post:
      summary: 回答问题
      operationId: answerQuestion
      parameters:
        - name: id
          in: path
          description: 问题 ID
          required: true
          schema:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                        required:
                          - id
                    required:
                      - data
  /questions/{questionId}/answers/{answerId}:
    get:
      summary: 获取回答详情
      operationId: getAnswerDetail
      parameters:
        - $ref: "#/components/parameters/questionId"
        - $ref: "#/components/parameters/answerId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          question:
                            $ref: "#/components/schemas/Question"
                          answer:
                            $ref: "#/components/schemas/Answer"
                    required:
                      - data
    put:
      summary: 更新回答
      operationId: updateAnswer
      parameters:
        - $ref: "#/components/parameters/questionId"
        - $ref: "#/components/parameters/answerId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    delete:
      summary: 删除回答
      operationId: deleteAnswer
      parameters:
        - $ref: "#/components/parameters/questionId"
        - $ref: "#/components/parameters/answerId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
  /questions/{questionId}/answers/{answerId}/agree:
    put:
      summary: 赞同回答
      operationId: agreeAnswer
      parameters:
        - $ref: "#/components/parameters/questionId"
        - $ref: "#/components/parameters/answerId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                agree_type:
                  type: integer
                  description: 赞同类型，0表示未赞同，1表示赞同，2表示反对
                  enum:
                    - 0
                    - 1
                    - 2
              required:
                - agree_type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          agree_count:
                            type: integer
                            description: 新的赞同数量
                        required:
                          - agree_count
                    required:
                      - data
  /questions/{questionId}/answers/{answerId}/favorite:
    put:
      summary: 收藏回答
      operationId: favoriteAnswer
      parameters:
        - $ref: "#/components/parameters/questionId"
        - $ref: "#/components/parameters/answerId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    delete:
      summary: 取消收藏回答
      operationId: unfavoriteAnswer
      parameters:
        - $ref: "#/components/parameters/questionId"
        - $ref: "#/components/parameters/answerId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
  /comments/{commentableType}/{commentableId}:
    get:
      summary: 获取对象评论列表
      operationId: getComments
      parameters:
        - $ref: "#/components/parameters/commentableId"
        - $ref: "#/components/parameters/commentableType"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          comments:
                            type: array
                            items:
                              type: object
                              allOf:
                                - $ref: "#/components/schemas/Comment"
                          page:
                            $ref: "#/components/schemas/Page"
    post:
      summary: 创建评论
      operationId: createComment
      parameters:
        - $ref: "#/components/parameters/commentableId"
        - $ref: "#/components/parameters/commentableType"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                        required:
                          - id
                required:
                  - data

  /comments/{commentId}:
    get:
      summary: 获取评论详情
      operationId: getCommentDetail
      parameters:
        - $ref: "#/components/parameters/commentId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          comment:
                            $ref: "#/components/schemas/Comment"
                    required:
                      - data
    delete:
      summary: 删除评论
      operationId: deleteComment
      parameters:
        - $ref: "#/components/parameters/commentId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
  /comments/{comment_id}/attitude:
    put:
      summary: 对评论表态
      operationId: attitudeComment
      parameters:
        - $ref: "#/components/parameters/commentId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attitude_type:
                  type: integer
                  description: 类型
                  enum:
                    - UNDEFINED
                    - AGREE
                    - DISAGREE
              required:
                - attitude_type
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"

  /topics:
    get:
      summary: 获取话题列表
      operationId: getTopics
      parameters:
        - name: q
          in: query
          description: 搜索关键词
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          topics:
                            type: array
                            items:
                              $ref: "#/components/schemas/Topic"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    post:
      summary: 创建话题
      operationId: createTopic
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        "201":
          description: Topic created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                    required:
                      - data
  /topics/{id}:
    get:
      summary: 获取话题详情
      operationId: getTopicDetail
      parameters:
        - name: id
          in: path
          description: 话题 ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          topic:
                            $ref: "#/components/schemas/Topic"
                    required:
                      - data
  /groups:
    get:
      summary: 获取圈子列表
      operationId: getGroups
      parameters:
        - name: q
          in: query
          description: 搜索关键词，留空即为获取全部圈子
          schema:
            type: string
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
        - name: sort
          in: query
          description: 排序方式
          schema:
            type: string
            enum:
              - recommend
              - hot
              - new
            default: recommend
        - name: joined
          in: query
          description: 是否为我参与的小组
          schema:
            type: boolean
        - name: managed
          in: query
          description: 是否为我管理的小组
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          groups:
                            type: array
                            items:
                              $ref: "#/components/schemas/Group"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    post:
      summary: 创建圈子
      operationId: createGroup
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                intro:
                  type: string
                avatar:
                  type: string
                public:
                  type: boolean
              required:
                - name
                - intro
                - avatar
                - public
      responses:
        "201":
          description: Group created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                    required:
                      - data
  /groups/availablities:
    get:
      summary: 获取圈子名字是否可用
      operationId: checkGroupNameAvailable
      parameters:
        - name: name
          in: query
          description: 要检查的圈子名字
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          available:
                            type: boolean
                            description: 圈子名字是否可用
                          recommend_names:
                            type: array
                            description: 如果不可用，推荐的名字
                            items:
                              type: string
                        required:
                          - available
                    required:
                      - data
  /groups/{groupId}:
    get:
      summary: 获取圈子详情
      operationId: getGroupDetail
      parameters:
        - $ref: "#/components/parameters/groupId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          group:
                            $ref: "#/components/schemas/Group"
                    required:
                      - data
    put:
      summary: 更新圈子
      operationId: updateGroup
      parameters:
        - $ref: "#/components/parameters/groupId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                intro:
                  type: string
                avatar:
                  type: string
                cover:
                  type: string
              required:
                - name
                - intro
                - avatar
                - cover
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    delete:
      summary: 解散圈子
      operationId: deleteGroup
      parameters:
        - $ref: "#/components/parameters/groupId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
  /groups/{groupId}/members:
    get:
      summary: 获取圈子成员列表
      operationId: getGroupMembers
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
        - name: filter
          in: query
          description: 过滤条件
          schema:
            type: string
            enum:
              - all
              - admin
              - member
              - pending
            default: all
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          members:
                            type: array
                            description: 成员列表
                            items:
                              $ref: "#/components/schemas/GroupMember"
                          page:
                            $ref: "#/components/schemas/Page"
                        required:
                          - members
                          - page
                    required:
                      - data
  /groups/{groupId}/memberships:
    post:
      summary: 加入圈子
      operationId: joinGroup
      parameters:
        - $ref: "#/components/parameters/groupId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          member_count:
                            type: integer
                            description: 新的成员数量
                    required:
                      - data
        "202":
          description: 已提交申请，等待审核
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    delete:
      summary: 退出圈子
      operationId: quitGroup
      parameters:
        - $ref: "#/components/parameters/groupId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
  /groups/{groupId}/memberships/{userId}:
    delete:
      summary: 踢出圈子
      operationId: kickoutGroup
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/userId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
  /groups/{groupId}/invitations:
    get:
      summary: 获取圈子成员邀请列表
      operationId: getGroupMemberInvitations
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          invitations:
                            type: array
                            items:
                              $ref: "#/components/schemas/GroupMemberInvitation"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    post:
      summary: 邀请加入圈子
      operationId: inviteJoinGroup
      parameters:
        - $ref: "#/components/parameters/groupId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  format: int64
                intro:
                  type: string
              required:
                - user_id
                - intro
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          invitation_id:
                            type: integer
                            format: int64
                    required:
                      - data
  /groups/{groupId}/invitations/{invitationId}:
    put:
      summary: 圈子管理员或被邀请者处理加入邀请
      operationId: handleGroupMemberInvitation
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/invitationId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: 处理动作
                  enum:
                    - accept
                    - reject
              required:
                - action
      responses:
        "200":
          description: 处理成功，被邀请者成功加入或被拒绝加入
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          member_count:
                            type: integer
                            description: 处理完成后新的成员数量
                            minimum: 0
                        required:
                          - member_count
        "202":
          description: 某一方已处理邀请（只有同意邀请才可能出现这个状态码），但仍需等待对方处理
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          invitee_status:
                            $ref: "#/components/schemas/GroupMemberInvitationStatus"
                          admin_status:
                            $ref: "#/components/schemas/GroupMemberInvitationStatus"
                    required:
                      - data
  /groups/{groupId}/settings:
    get:
      summary: 获取圈子设置
      operationId: getGroupSettings
      parameters:
        - $ref: "#/components/parameters/groupId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          settings:
                            $ref: "#/components/schemas/GroupSettings"
                    required:
                      - data
    patch:
      summary: 更新圈子设置
      operationId: updateGroupSettings
      parameters:
        - $ref: "#/components/parameters/groupId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  $ref: "#/components/schemas/GroupSettings"
              required:
                - settings
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
  /groups/{groupId}/questions:
    get:
      summary: 获取圈子问题列表
      operationId: getGroupQuestions
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
        - name: handpicked
          in: query
          description: 是否为精选问题
          schema:
            type: boolean
        - name: sort
          in: query
          description: 排序方式
          schema:
            type: string
            enum:
              - recommend
              - hot
              - new
            default: recommend
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          questions:
                            type: array
                            items:
                              $ref: "#/components/schemas/Question"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
  /groups/{groupId}/targets:
    get:
      summary: 获取圈子目标列表
      operationId: getGroupTargets
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
        - name: sort
          in: query
          description: 排序方式
          schema:
            type: string
            enum:
              - recommend
              - hot
              - new
            default: recommend
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          targets:
                            type: array
                            items:
                              $ref: "#/components/schemas/GroupTarget"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    post:
      summary: 创建圈子目标
      operationId: createGroupTarget
      parameters:
        - $ref: "#/components/parameters/groupId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/GroupTarget/properties/name"
                intro:
                  $ref: "#/components/schemas/GroupTarget/properties/intro"
                start_time:
                  $ref: "#/components/schemas/GroupTarget/properties/start_time"
                is_timed:
                  $ref: "#/components/schemas/GroupTarget/properties/is_timed"
                end_time:
                  $ref: "#/components/schemas/GroupTarget/properties/end_time"
                frequency:
                  $ref: "#/components/schemas/GroupTarget/properties/frequency"
                is_material_required:
                  $ref: "#/components/schemas/GroupTarget/properties/is_material_required"
                materials:
                  $ref: "#/components/schemas/GroupTarget/properties/materials"
              required:
                - name
                - intro
                - start_time
                - is_timed
                - end_time
                - frequency
                - is_material_required
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                    required:
                      - data
  /groups/{groupId}/targets/{targetId}:
    get:
      summary: 获取圈子目标详情
      operationId: getGroupTargetDetail
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/targetId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          target:
                            $ref: "#/components/schemas/GroupTarget"
                          check_in_stats:
                            type: object
                            description: 当前用户的打卡情况统计
                            properties:
                              continuous_count:
                                type: integer
                                description: 当前连续打卡天数
                                format: int64
                              continuous_rank:
                                type: integer
                                description: 当前连续打卡天数排名
                                format: int64
                              max_continuous_count:
                                type: integer
                                description: 最大连续打卡天数
                                format: int64
                              max_continuous_rank:
                                type: integer
                                description: 最大连续打卡天数排名
                                format: int64
                              total_count:
                                type: integer
                                description: 总打卡天数
                                format: int64
                              total_rank:
                                type: integer
                                description: 总打卡天数排名
                                format: int64
                    required:
                      - data
    put:
      summary: 更新圈子目标
      operationId: updateGroupTarget
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/targetId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                intro:
                  type: string
                start_time:
                  type: integer
                  format: int64
                end_time:
                  type: integer
                  format: int64
                attendance:
                  type: object
                  description: 目标打卡设置
                  properties:
                    type:
                      type: string
                      enum:
                        - daily
                        - weekly
                        - monthly
              required:
                - name
                - intro
                - start_time
                - end_time
                - attendance
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    delete:
      summary: 删除圈子目标
      operationId: deleteGroupTarget
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/targetId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
  /groups/{groupId}/targets/{targetId}/leaderboards:
    get:
      summary: 获取圈子目标排行榜
      operationId: getGroupTargetLeaderboard
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/targetId"
        - name: period
          in: query
          description: 排行榜类型
          schema:
            type: string
            enum:
              - weekly
              - monthly
              - all
            default: weekly
        - name: metric
          in: query
          description: 排行榜指标
          schema:
            type: string
            enum:
              - continuous_count
              - max_continuous_count
              - total_count
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          leaderboard:
                            type: array
                            items:
                              allOf:
                                - $ref: "#/components/schemas/GroupMember"
                                - type: object
                                  properties:
                                    rank:
                                      type: integer
                                      description: 排名
                                      format: int64
                                      minimum: 1
                                    metric:
                                      type: integer
                                      description: 指标值
                                      format: int64
                    required:
                      - data
  /groups/{groupId}/targets/{targetId}/check-ins:
    get:
      summary: 获取圈子目标打卡列表
      operationId: getGroupTargetCheckIns
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/targetId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          check_ins:
                            type: array
                            items:
                              $ref: "#/components/schemas/GroupTargetCheckIn"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    post:
      summary: 打卡
      operationId: checkInGroupTarget
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/targetId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                materials:
                  type: array
                  items:
                    $ref: "#/components/schemas/GroupTargetMaterialSubmission"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          check_in_id:
                            type: integer
                            format: int64
                    required:
                      - data
  /groups/{groupId}/targets/{targetId}/check-ins/{checkInId}/approval:
    put:
      summary: 审批打卡
      operationId: approveGroupTargetCheckIn
      parameters:
        - $ref: "#/components/parameters/groupId"
        - $ref: "#/components/parameters/targetId"
        - name: checkInId
          in: path
          description: 打卡 ID
          required: true
          schema:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: 审批动作
                  enum:
                    - approve
                    - reject
              required:
                - action
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
  /groups/{groupId}/leaderboards:
    get:
      summary: 获取圈子排行榜
      operationId: getGroupLeaderboard
      parameters:
        - $ref: "#/components/parameters/groupId"
        - name: period
          in: query
          description: 排行榜类型
          schema:
            type: string
            enum:
              - weekly
              - monthly
              - all
            default: weekly
        - name: metric
          in: query
          description: 排行榜指标
          schema:
            type: string
            enum:
              - contributions
              - questions
              - answers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          leaderboard:
                            type: array
                            items:
                              allOf:
                                - $ref: "#/components/schemas/GroupMember"
                                - type: object
                                  properties:
                                    rank:
                                      type: integer
                                      description: 排名
                                      format: int64
                                      minimum: 1
                                    metric:
                                      type: integer
                                      description: 指标值
                                      format: int64
                    required:
                      - data
  /feeds:
    get:
      summary: 获取动态列表
      operationId: getFeedList
      parameters:
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          feeds:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: 动态 ID
                                from:
                                  type: string
                                  description: 动态来源
                                  enum:
                                    - follow_question
                                    - follow_user
                                    - follow_topic
                                    - hot
                                    - personalized
                                type:
                                  type: string
                                  description: 动态类型
                                  enum:
                                    - question
                                    - answer
                                data:
                                  type: object
                                  description: 动态数据
                                  oneOf:
                                    - $ref: "#/components/schemas/Question"
                                    - $ref: "#/components/schemas/Answer"
                              required:
                                - from
                                - type
                                - data
                          page:
                            type: object
                            properties:
                              page_size:
                                type: integer
                                format: int64
                                description: 每页动态数量
                              next_start:
                                type: string
                                description: 下一页第一条动态的 ID
                              has_more:
                                type: boolean
                                description: 是否还有更多动态
                    required:
                      - data
  /hot:
    get:
      summary: 获取热门问题列表
      operationId: getHotQuestionList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          questions:
                            type: array
                            items:
                              $ref: "#/components/schemas/Question"
                    required:
                      - data
  /search:
    get:
      summary: 搜索
      operationId: search
      parameters:
        - name: q
          in: query
          description: 搜索关键词
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: 搜索类型
          schema:
            type: string
            enum:
              - question
              - answer
              - user
              - topic
            default: question
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          results:
                            type: array
                            items:
                              oneOf:
                                - $ref: "#/components/schemas/Question"
                                - $ref: "#/components/schemas/Answer"
                                - $ref: "#/components/schemas/User"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
  /images:
    post:
      summary: 上传图片
      operationId: uploadImage
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: 图片 ID
  /insights:
    post:
      summary: 创建灵感
      operationId: createInsight
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 纯文本内容
                medias:
                  type: array
                  description: 媒体文件（图片或视频）列表
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - image
                          - video
                      id:
                        type: number
                        format: int64
                attachment:
                  oneOf:
                    - type: object
                      description: 附件文件
                      properties:
                        type:
                          type: string
                          enum:
                            - file
                        id:
                          type: number
                          format: int64
                    - type: object
                      description: 附件链接
                      properties:
                        type:
                          type: string
                          enum:
                            - link
                        url:
                          type: string
                          example: https://example.com
              required:
                - content
      responses:
        "201":
          description: Insight created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            format: int64
                        required:
                          - id
                    required:
                      - data
  /insights/{insightId}:
    get:
      summary: 获取灵感详情
      operationId: getInsightDetail
      parameters:
        - $ref: "#/components/parameters/insightId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          insight:
                            $ref: "#/components/schemas/Insight"
                    required:
                      - data
    put:
      summary: 更新灵感
      operationId: updateInsight
      parameters:
        - $ref: "#/components/parameters/insightId"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
                - content
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    delete:
      summary: 删除灵感
      operationId: deleteInsight
      parameters:
        - $ref: "#/components/parameters/insightId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
  /insights/{insightId}/likes:
    get:
      summary: 获取点赞用户列表
      operationId: getInsightLikes
      parameters:
        - $ref: "#/components/parameters/insightId"
        - $ref: "#/components/parameters/page_start"
        - $ref: "#/components/parameters/page_size"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CommonResponse"
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          likes:
                            type: array
                            items:
                              $ref: "#/components/schemas/User"
                          page:
                            $ref: "#/components/schemas/Page"
                    required:
                      - data
    put:
      summary: 点赞灵感
      operationId: likeInsight
      parameters:
        - $ref: "#/components/parameters/insightId"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonResponse"
    delete:
      summary: 取消点赞灵感
      operationId: unlikeInsight
      parameters:
        - $ref: "#/components/parameters/insightId"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: No Content
